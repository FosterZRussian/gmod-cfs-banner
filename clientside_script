if SERVER then return end

if GetConVar("gmod_language"):GetString() == "ru" then
	language.Add("CFS_Banner_MainTextDescription", "Привет, похоже Вы установили контент проекта CrossFire: Source\n\nCrossFire: Source - это некоммерческий проект, базирующийся на адаптации сеттинга CrossFire в игру Garry`s Mod.\nМы хотим создать уникальную тактическую игровую среду, в которой все смогут приятно провести свое время, и сразиться за победу!\nЕсли хотите с нами поиграть, присоединяйтесь, так Вы сможете поддержать нашу огромную работу.\n\nУзнать подробнее о нашем проекте, Вы можете по кликабельным ссылкам ниже.")
	language.Add("CFS_Banner_CloseMenu", "Закрыть")
	language.Add("CFS_Banner_IPDescription", "IP нашего публичного сервера (консольная команда для входа, можно скопировать)")
else
	language.Add("CFS_Banner_MainTextDescription", "Hi, it looks like you have installed the content of the CrossFire: Source project\n\nCrossFire: Source is a non-commertial project based on adapting the CrossFire game to Garry`s Mod.\nWe want to create a unique tactical gaming environment in which everyone can enjoy their time , and fight for victory!\nIf you want to play with us, join us, so you can support our great work.\n\nFor more details about our project, you can click on the links below.")
	language.Add("CFS_Banner_CloseMenu", "Close")
	language.Add("CFS_Banner_IPDescription", "IP of our public server (console command for join, you can copy it)")
end


local Images = {
	["STEAM"] = {
		link = {
			url = "https://i.imgur.com/NQefC4y.png",
			size_boost = 1,
		},	
		mat = nil,
	},
	["VK"] = {
		link = {
			url = "https://i.imgur.com/00HLhQo.png",
			size_boost = 1,
		},	
		mat = nil,
	},
	["BG_Gradient"] = {
		link = {
			url = "https://i.imgur.com/onSjgpZ.png",
			size_boost = 1,
		},	
		mat = nil,
	},
	["BG_Gradient2"] = {
		link = {
			url = "https://i.imgur.com/gosCnJz.png",
			size_boost = 1,
		},	
		mat = nil,
	},
	["BG_Img1"] = {
		link = {
			url = "https://i.imgur.com/kfTuR3M.png",
			size_boost = 2,
		},	
		mat = nil,
	}
}

local function ImageGetMat(str)
	return Images[str].mat
end

local function f_GetUPos(panel)
	local x,y = panel:GetPos()
	local x2,y2 = panel:GetSize()
	return x+x2, y+y2
end

local function ShowBanner()
	local vFrame = vgui.Create("EditablePanel")
	vFrame:SetSize(944,480)
	vFrame:MakePopup()
	vFrame:Center()

	
	vFrame.IMG = vgui.Create("DImage", vFrame)
	vFrame.IMG:SetSize(vFrame:GetSize())
	vFrame.IMG:SetMaterial(ImageGetMat("BG_Gradient"))

		

	vFrame.IMG3 = vgui.Create("DPanel", vFrame)
	vFrame.IMG3:SetSize(vFrame:GetSize())
	vFrame.IMG3:Center()
	vFrame.IMG3.Paint = function() end
	

	vFrame.IMG3.Mat = vgui.Create("DImage",vFrame.IMG3)
	vFrame.IMG3.Mat:SetSize(vFrame:GetSize())
	vFrame.IMG3.Mat:Center()
	vFrame.IMG3.Mat:SetMaterial(ImageGetMat("BG_Gradient2"))

	local function BG2_Fade(AlphaInt)
		vFrame.IMG3:AlphaTo(AlphaInt, 4, 0, function()
			if AlphaInt == 255 then
				BG2_Fade(0)
			else	
				BG2_Fade(255)
			end
		end)
	end
	BG2_Fade(0)


	vFrame.IMG2 = vgui.Create("DImage", vFrame)
	vFrame.IMG2:SetSize(934,470)
	vFrame.IMG2:Center()
	vFrame.IMG2:SetMaterial(ImageGetMat("BG_Img1"))


	vFrame.BGT = vgui.Create("DPanel", vFrame)
	vFrame.BGT:SetSize(900,120)
	vFrame.BGT:Center()
	vFrame.BGT:AlignTop(150)
	vFrame.BGT:SetBackgroundColor(Color(0,0,0,120))
	
	vFrame.BGT.Line = vgui.Create("DPanel", vFrame.BGT)
	vFrame.BGT.Line:SetSize(2,110)
	vFrame.BGT.Line:Center()
	vFrame.BGT.Line:AlignLeft(5)
	vFrame.BGT.Line:SetBackgroundColor(Color(255,0,0,255))

	vFrame.BGT.TextPanel = vgui.Create("DLabel", vFrame.BGT)
	vFrame.BGT.TextPanel:SetSize(855,110)
	vFrame.BGT.TextPanel:AlignTop(5)
	vFrame.BGT.TextPanel:AlignLeft(15)
	vFrame.BGT.TextPanel:SetText( "#CFS_Banner_MainTextDescription" )
	vFrame.BGT.TextPanel:SetTextColor(Color(255,255,255,255))
			

			


	local x,y = f_GetUPos(vFrame.BGT)

	vFrame.BGT_ForUrl = vgui.Create("DPanel", vFrame)
	vFrame.BGT_ForUrl:SetSize(900,50)
	vFrame.BGT_ForUrl:SetPos(0,y+20)
	vFrame.BGT_ForUrl:CenterHorizontal()
	vFrame.BGT_ForUrl:SetBackgroundColor(Color(0,0,0,120))
	vFrame.BGT_ForUrl.Paint = function() end

	
	local function CreateButton(link, img)
		local Url_VK = vgui.Create("DPanel", vFrame.BGT_ForUrl)
		Url_VK:SetSize(350,45)
		Url_VK:SetBackgroundColor(Color(255,0,0,255))
		Url_VK.Paint = function(w,h) 

			draw.RoundedBox( 0.1, 0, 0, w:GetWide(),w:GetTall(), Color(0,0,0,120) )
			

			draw.RoundedBox( 0.1, w:GetWide()-1, 0, 1,w:GetTall(), w:GetBackgroundColor() )
			draw.RoundedBox( 0.1, 0, 0, 1,w:GetTall(), w:GetBackgroundColor() )

			draw.RoundedBox( 0.1, 0, 0, w:GetWide(),1, w:GetBackgroundColor() )
			draw.RoundedBox( 0.1, 0, w:GetTall()-1, w:GetWide(),1, w:GetBackgroundColor() )

		end

		Url_VK.IMG = vgui.Create("DImage", Url_VK)
		Url_VK.IMG:SetSize(35,35)
		Url_VK.IMG:Center()
		Url_VK.IMG:AlignLeft(5)
		Url_VK.IMG:SetMaterial(ImageGetMat(img))		
		x,y = f_GetUPos(Url_VK.IMG)

		Url_VK.DBTN = vgui.Create("DButton", Url_VK)
		Url_VK.DBTN:SetSize(300,35)
		Url_VK.DBTN:SetPos(x+5,y)
		Url_VK.DBTN:CenterVertical()
		Url_VK.DBTN.Paint = function() end
		Url_VK.DBTN:SetText("")
		Url_VK.DBTN.DoClick = function()
			gui.OpenURL(link)
		end
	 	
		Url_VK.DBTN.D_Label = vgui.Create("DLabel", Url_VK.DBTN)
		Url_VK.DBTN.D_Label:SetText(link)
		Url_VK.DBTN.D_Label:SetTextColor(Color(255,255,255,255))
		Url_VK.DBTN.D_Label:SizeToContents()
		Url_VK.DBTN.D_Label:Center()


		Url_VK.DBTN.SelectedPanel = vgui.Create("DPanel", Url_VK.DBTN)
		x,y = Url_VK.DBTN.D_Label:GetSize()
		Url_VK.DBTN.SelectedPanel:SetSize(x*1.1,1)
		Url_VK.DBTN.SelectedPanel:CenterHorizontal()
		Url_VK.DBTN.SelectedPanel:AlignBottom(4)
		Url_VK.DBTN.Think = function()
			if Url_VK.DBTN:IsHovered() then
				Url_VK.DBTN.SelectedPanel:SetBackgroundColor(Color(255,0,0,255))
			else
				Url_VK.DBTN.SelectedPanel:SetBackgroundColor(Color(50,50,50,255))
			end
		end
		return Url_VK
	end

	
	local URL_VK = CreateButton("https://vk.com/cf_source","VK")
	URL_VK:AlignLeft(5)
	URL_VK:CenterVertical()

	local URL_STEAM = CreateButton("https://steamcommunity.com/groups/cf_source","STEAM")
	URL_STEAM:AlignRight(5)
	URL_STEAM:CenterVertical()
	


	vFrame.ServerIP = vgui.Create("DPanel", vFrame)
	vFrame.ServerIP:SetSize(850,65)
	vFrame.ServerIP:Center()
	vFrame.ServerIP:AlignBottom(60)
	vFrame.ServerIP.Paint = function() end
	vFrame.ServerIP.Text = vgui.Create("DLabel", vFrame.ServerIP)
	vFrame.ServerIP.Text:SetText("#CFS_Banner_IPDescription")
	vFrame.ServerIP.Text:SizeToContents()
	vFrame.ServerIP.Text:SetTextColor(Color(255,255,255,255))
	vFrame.ServerIP.Text:AlignBottom(15)
	vFrame.ServerIP.Text:CenterHorizontal()

	vFrame.ServerIP.IP = vgui.Create("DPanel", vFrame.ServerIP)
	vFrame.ServerIP.IP:SetSize(850,25)
	vFrame.ServerIP.IP:AlignTop()
	vFrame.ServerIP.IP:SetBackgroundColor(Color(255,0,0,255))
	vFrame.ServerIP.IP.Paint = function(w)
		draw.RoundedBox( 0.1, 0, 0, w:GetWide(),w:GetTall(), Color(0,0,0,120) )			

		draw.RoundedBox( 0.1, w:GetWide()-1, 0, 1,w:GetTall(), w:GetBackgroundColor() )
		draw.RoundedBox( 0.1, 0, 0, 1,w:GetTall(), w:GetBackgroundColor() )

		draw.RoundedBox( 0.1, 0, 0, w:GetWide(),1, w:GetBackgroundColor() )
		draw.RoundedBox( 0.1, 0, w:GetTall()-1, w:GetWide(),1, w:GetBackgroundColor() )
	end

	vFrame.ServerIP.IP.Text = vgui.Create("DTextEntry", vFrame.ServerIP.IP)
	vFrame.ServerIP.IP.Text:SetValue("connect play.cf-source.ru:27015")
	vFrame.ServerIP.IP.Text:SetSize(400,25)
	vFrame.ServerIP.IP.Text:SetTextColor(Color(255,255,255,255))
	vFrame.ServerIP.IP.Text:CenterVertical()
	vFrame.ServerIP.IP.Text:SetPaintBackground(false)
	vFrame.ServerIP.IP.Text:SetEnterAllowed(false)
	vFrame.ServerIP.IP.Text.AllowInput = function( self, stringValue )
		return true
	end
	vFrame.ServerIP.IP.Text.OnChange = function( ) 
		vFrame.ServerIP.IP.Text:SetValue("connect play.cf-source.ru:27015") 
	end

	local function CheckTextDelete()
		timer.Simple(0.2, function()
			if vFrame != nil && vFrame.ServerIP != nil && vFrame.ServerIP.IP != nil && vFrame.ServerIP.IP.Text != nil  then
				vFrame.ServerIP.IP.Text:SetValue("connect play.cf-source.ru:27015") 		
				CheckTextDelete()
			end
		end)
	end
	CheckTextDelete()


	vFrame.DB1 = vgui.Create("DButton", vFrame)
	vFrame.DB1:SetSize(140,40)
	vFrame.DB1:SetText("#CFS_Banner_CloseMenu")
	vFrame.DB1.DoClick = function()
		vFrame:Remove()
	end
	vFrame.DB1:AlignBottom(15)
	vFrame.DB1:AlignRight(25)



end

local function CheckAndRem_Timer()
	if timer.Exists("CFS_BannerMaterialTimer") then timer.Remove("CFS_BannerMaterialTimer") end
end

local function UI_GetSupportBanner()

	local panels = {}
	for k,v in pairs(Images) do
		--v.link
		v.mat = nil

		local WebMat = vgui.Create("DHTML")
		WebMat:SetAlpha(0)
		WebMat:SetSize(512*2*v.link.size_boost,512*2*v.link.size_boost)
		WebMat:OpenURL( v.link.url )
		WebMat:Call( [[document.body.style.overflow = "hidden" ]] )
		WebMat:Call( [[
			var elems = document.getElementsByTagName('img');
			for(var i=0; i<elems.length; i++){ elems[i].style.width=']].. 512*2*v.link.size_boost ..[[px'; elems[i].style.height=']].. 512*2*v.link.size_boost ..[[px';}
		]] )
		panels[k] = WebMat
	end
	
	local function CheckMat()
		if #panels != #Images then return false end
		for k,v in pairs(panels) do
			if not v:GetHTMLMaterial() then return false end
		end
		return true
	end

	local function SetupMat()
		for k,v in pairs(panels) do
			local HTMLMaterial = v:GetHTMLMaterial()
			local Shaders = {
				["$basetexture"]= HTMLMaterial:GetName(),
				["$vertexalpha"] = "1",
				["$vertexcolor"] = "1",
			}
			local MaterialID = string.Replace(HTMLMaterial:GetName(), "__vgui_texture_", "")
			Images[k].mat = CreateMaterial("WebMaterial_"..MaterialID, "UnLitGeneric", Shaders)
			v:Remove()
		end
	end

	CheckAndRem_Timer()
	timer.Create("CFS_BannerMaterialTimer", 0.5, 0, function()
		if CheckMat() then
			CheckAndRem_Timer()
			SetupMat()
			timer.Simple(2, function()
				ShowBanner()
			end)
		end
	end)
end

local nextShow = CurTime()

net.Receive("CFS_ShowSupportBannerForContentUsers", function()
	UI_GetSupportBanner()
end)

